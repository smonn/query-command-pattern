@model SampleEntityFramework.DataAccess.Commands.Courses.EditCourseCommand

@{
    var isCreating = Model.CourseId == 0;
    ViewBag.Title = isCreating
        ? "Register Course"
        : "Editing Course - " + Model.Title + " [" + Model.CourseCode + "]";
}

@if (isCreating)
{
    <h2>Register Course</h2>
}
else
{
    <h2>Editing Course <small>@Model.Title [@Model.CourseCode]</small></h2>
}

@using (Html.BeginForm("Update", "Course", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(s => s.CourseId)

    <div class="form-field">
        @Html.LabelFor(s => s.Title)
        @Html.TextBoxFor(s => s.Title)
        @Html.ValidationMessageFor(s => s.Title)
    </div>
    <div class="form-field">
        @Html.LabelFor(s => s.CourseCode)
        @Html.TextBoxFor(s => s.CourseCode, new { Value = Model.CourseCode == 0 ? string.Empty : Model.CourseCode.ToString() })
        @Html.ValidationMessageFor(s => s.CourseCode)
    </div>
    <div class="form-field">
        @Html.LabelFor(s => s.Credits)
        @Html.TextBoxFor(s => s.Credits, new { Value = Model.Credits == 0 ? string.Empty : Model.Credits.ToString() })
        @Html.ValidationMessageFor(s => s.Credits)
    </div>
    <div class="form-actions">
        <button type="submit">@(isCreating ? "Register" : "Update")</button>
        @(isCreating
            ? Html.ActionLink("Cancel", "Index")
            : Html.ActionLink("Cancel", "Detail", new { id = Model.CourseCode }))
    </div>
}
